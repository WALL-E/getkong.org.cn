{"version":3,"sources":["app.js","dropdown.js","affix.js"],"names":[],"mappingsrfile":"app.js","sourcesContent":["/* globals $, history, analytics */\n\n'use strict'\n\n// Gitter config\n;((window.gitter = {}).chat = {}).options = {\n  room: 'Mashape/kong',\n  activationElement: false\n}\n\n$(function () {\n  var $window = $(window)\n  var $docs = $('#documentation')\n\n  $('.navbar-toggle').on('click', function () {\n    var $navbar = $($(this).data('target'))\n    $navbar.slideToggle(150)\n  })\n\n  $('.scroll-to').on('click', function (e) {\n    e.preventDefault()\n\n    $('html, body').animate({\n      scrollTop: $($(this).attr('href')).offset().top - 107 // Header height\n    }, 700)\n  })\n\n  /*\n    Gitter Sidecar\n    1. Sets up click handler for gitter toggle button\n    2. When gitter is toggled for the first time,\n      set up gitter sidecar event handler\n  */\n\n  var $gitterBtn = $('#support-bubble')\n\n  var setupGitter = {\n    _ready: $.Deferred(),\n    ds: 'data-gitter-toggle-chat-state',\n\n    init: function () {\n      var chatElement = document.querySelector('.gitter-chat-embed')\n\n      chatElement.addEventListener('gitter-chat-toggle', function (e) {\n        if (e.detail.state) {\n          setupGitter.setClose()\n        } else {\n          setupGitter.setOpen()\n        }\n      })\n\n      this._ready.resolve()\n    },\n\n    // Set gitter button to close, 'X' appearance\n    setClose: function () {\n      $gitterBtn.attr(this.ds, 'false')\n        .addClass('close-gitter')\n    },\n\n    // Set gitter button to open, 'Chat' appearance\n    setOpen: function () {\n      $gitterBtn.attr(this.ds, 'true')\n        .removeClass('close-gitter')\n    },\n\n    // Getter for sidecar init state\n    ready: function () {\n      return this._ready.promise()\n    }\n  }\n\n  $gitterBtn.one('click', function () {\n    setupGitter.init()\n  })\n\n  // Change header download button color\n\n  if (!$('body#enterprise').length) {\n    var introSectionHeight = $('.section.intro-section').outerHeight() || 50\n    var $downloadBtn = $('.navbar-nav').find('.button')\n\n    $window.on('scroll', function () {\n      var scrollTop = $(this).scrollTop()\n\n      if (scrollTop > introSectionHeight) {\n        $downloadBtn.removeClass('button-dark').addClass('button-primary')\n      } else {\n        $downloadBtn.removeClass('button-primary').addClass('button-dark')\n      }\n    })\n  }\n\n  // Page section on contribute page\n\n  $('.toggle-page-section').on('click', function (e) {\n    e.preventDefault()\n    var $link = $(this)\n\n    $link.parent().next('.page-section').stop().slideToggle(300, function () {\n      $link.toggleClass('active')\n    })\n  })\n\n  // Tabs on download page\n\n  var $tabs = $('.tab-list li')\n  var $tabPanes = $('.tab-pane')\n\n  $tabs.on('click', function (e, disableTracking) {\n    e.preventDefault()\n\n    var tabId = $(this).find('a').attr('href')\n\n    $tabs.removeClass('active').filter(this).addClass('active')\n    $tabPanes.removeClass('active').filter(tabId).addClass('active')\n\n    if (history.pushState) {\n      history.pushState(null, null, tabId)\n    } else {\n      window.location.hash = tabId\n    }\n\n    if (!disableTracking) {\n      analytics.track('Choose installation method', {\n        installationMethod: tabId.substr(1)\n      })\n    }\n  })\n\n  if (window.location.hash) {\n    $tabs.find('a[href=\"' + window.location.hash + '\"]').trigger('click', true)\n  }\n\n  // Subscribe form\n\n  $('.subscribe-form').on('submit', function (e) {\n    e.preventDefault()\n\n    var form = $(this)\n    var email = form.find('[name=\"email\"]').val()\n    var time = new Date().toString()\n\n    var traits = {\n      email: email,\n      environment: 'kong',\n      newsletter_updates: true,\n      created_at: time\n    }\n\n    form.addClass('loading')\n\n    var track = function () {\n      form.addClass('complete')\n\n      analytics.track('request_newsletter_updates', {\n        email: email,\n        request_date: time\n      })\n    }\n\n    analytics.identify(email, traits, track)\n  })\n\n  // Enterprise page demo request form\n\n  $('.demo-request-form').on('submit', function (e) {\n    e.preventDefault()\n\n    var form = $(this)\n    var data = form.serializeArray()\n    var submitTime = new Date().toString()\n    var payload = {}\n    var fieldValues = {}\n    var relateiqFieldIds = {\n      title: 8,\n      tell_us_more: 6,\n      email: 7,\n      phone: 9,\n      deployment: 14,\n      company: 10,\n      name: 13,\n      environment: 16\n    }\n\n    form.addClass('loading')\n\n    for (var i = 0; i < data.length; i++) {\n      payload[data[i].name] = data[i].value\n    }\n\n    payload.environment = 'kong'\n\n    var traits = $.extend({\n      enterprise: true,\n      created_at: submitTime\n    }, payload)\n\n    analytics.identify(payload.email, traits, function () {\n      analytics.track('request_enterprise_demo', $.extend({\n        request_date: submitTime\n      }, payload))\n    })\n\n    for (var field in payload) {\n      if (payload[field]) {\n        fieldValues[relateiqFieldIds[field]] = [{\n          raw: payload[field]\n        }]\n      }\n    }\n\n    $.ajax({\n      url: 'https://mashaper-relateiq-v1.p.mashape.com/accounts',\n      method: 'POST',\n      headers: {\n        'authorization': 'Basic NTU2ZDcxYzdlNGIwMmM5ZTM3YjgxNzc1Ok9NbFNBVGM1QkFTOG1JbEtXZENMZFZ2Z3RqYQ==',\n        'x-mashape-key': 'mJUINHSWBYmshREqNlfTBKtbBHDZp1N7VKhjsnUIUo4f4r3pVj'\n      },\n      data: JSON.stringify({\n        name: payload.email,\n        fieldValues: fieldValues\n      })\n    }).always(function () {\n      form.addClass('complete')\n    })\n  })\n\n  // Docs page navigation\n  if ($docs.length) {\n    var $nav = $docs.find('.page-navigation')\n    var $navItems = $nav.find('a')\n    var hash = window.location.hash\n\n    var setNavItemActive = function () {\n      $navItems.removeClass('active').filter(this).addClass('active')\n    }\n\n    if (hash) {\n      $navItems.each(function () {\n        if ($(this).attr('href').indexOf(hash) !== -1) {\n          setNavItemActive.call(this)\n        }\n      })\n    }\n\n    $navItems.on('click', setNavItemActive)\n  }\n\n  // Analytics\n\n  $('[href^=\"/install\"]').each(function () {\n    var $link = $(this)\n\n    analytics.trackLink(this, 'Clicked download', {\n      section: $link.closest('.navbar').length ? 'header' : 'page',\n      pathname: window.location.pathname,\n      type: $link.hasClass('button') ? 'button' : 'link'\n    })\n  })\n\n  analytics.track(\n      'Viewed ' + $.trim(document.title.split('|').shift()) + ' page'\n  )\n\n  $('.plugin-plate-link').each(function () {\n    analytics.trackLink(this, 'Click on plugin', {\n      plugin_type: $(this).closest('.plugin-plate').find('h3').text()\n    })\n  })\n\n  $('#documentation .page-navigation a').each(function () {\n    analytics.trackLink(this, 'Click documentation link', {\n      documentation_name: $(this).text()\n    })\n  })\n\n  $('.community-plate a').each(function () {\n    analytics.trackLink(this, 'Click community link', {\n      community_type: $.trim($(this).closest('.community-plate').find('h4').text())\n    })\n  })\n\n  analytics.trackLink($('a[href=\"#comparison\"]')[0], 'Clicked Why Kong')\n})\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.6\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.6'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.6\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.6'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n"],"sourceRoot":"/source/"}